"""init

Revision ID: ea67f6c47cf6
Revises: 
Create Date: 2024-03-04 12:34:04.752278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ea67f6c47cf6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('objects',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('city', sa.Enum('NORILSK', 'TALNAH', 'KAIRKAN', 'DUDINKA', name='city'), nullable=False),
    sa.Column('category', sa.Enum('RESTAURANT', 'FAST_FOOD', 'HOSTEL', 'CHILD_CENTER', name='objectcategory'), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('objects_pkey')),
    sa.UniqueConstraint('name', name=op.f('objects_name_key'))
    )
    op.create_index(op.f('ix_objects_deleted_at'), 'objects', ['deleted_at'], unique=False)
    op.create_table('right_user',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('object_access', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('right_user_pkey')),
    sa.UniqueConstraint('name', name=op.f('right_user_name_key')),
    sa.UniqueConstraint('object_access', name=op.f('right_user_object_access_key'))
    )
    op.create_index(op.f('ix_right_user_deleted_at'), 'right_user', ['deleted_at'], unique=False)
    op.create_table('report_profit',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('object', sa.Integer(), nullable=False),
    sa.Column('revenue', sa.Float(), nullable=False),
    sa.Column('cost_price', sa.Float(), nullable=False),
    sa.Column('number_of_checks', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['object'], ['objects.id'], name=op.f('report_profit_object_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('report_profit_pkey'))
    )
    op.create_index(op.f('ix_report_profit_deleted_at'), 'report_profit', ['deleted_at'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('gen_random_uuid()'), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('tg_id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('right', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['right'], ['right_user.id'], name=op.f('users_right_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key')),
    sa.UniqueConstraint('tg_id', name=op.f('users_tg_id_key')),
    sa.UniqueConstraint('username', name=op.f('users_username_key'))
    )
    op.create_index(op.f('ix_users_deleted_at'), 'users', ['deleted_at'], unique=False)
    op.create_table('report_time_control',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('data_start', sa.DateTime(), nullable=False),
    sa.Column('data_end', sa.DateTime(), nullable=True),
    sa.Column('working_hours', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text("timezone('utc', now())"), nullable=False),
    sa.Column('deleted_at', sa.TIMESTAMP(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('report_time_control_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('report_time_control_pkey'))
    )
    op.create_index(op.f('ix_report_time_control_deleted_at'), 'report_time_control', ['deleted_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_report_time_control_deleted_at'), table_name='report_time_control')
    op.drop_table('report_time_control')
    op.drop_index(op.f('ix_users_deleted_at'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_report_profit_deleted_at'), table_name='report_profit')
    op.drop_table('report_profit')
    op.drop_index(op.f('ix_right_user_deleted_at'), table_name='right_user')
    op.drop_table('right_user')
    op.drop_index(op.f('ix_objects_deleted_at'), table_name='objects')
    op.drop_table('objects')
    # ### end Alembic commands ###
